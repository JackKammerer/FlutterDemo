import 'package:flutter/material.dart';
import 'dart:math';
import 'package:google_fonts/google_fonts.dart';


void main() => runApp(MyApp());

class CandyButton extends StatefulWidget {
  final Function() onCandyGenerated; // Callback function

  CandyButton({required this.onCandyGenerated});
  
  @override
  _CandyButtonState createState() => _CandyButtonState();
}


class MyDraggableItem {
  final String emoji;
  
  MyDraggableItem(this.emoji);
}

String candy = 'üç¨';

class _CandyButtonState extends State<CandyButton> {

  String randCandy() {
    final random = Random();
    int randomNumber = random.nextInt(1000);
  
    if (randomNumber < 400) {
      return 'üç¨';
    } else if (randomNumber < 600) {
     return 'üç´';
    } else if (randomNumber < 700) {
     return 'üëª';
    } else if (randomNumber < 800) {
      return 'üòà';
    } else if (randomNumber < 850) {
      return 'üëΩ';
    } else if (randomNumber < 900) {
      return 'üë∫';
    } else {
     return 'üç≠';
    }
  }
  
  void updateCandy() {
    setState(() {
      candy = randCandy();
    });
  }
  
    @override
  Widget build(BuildContext context) {
    return Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.end,
        children: [
          Center(child: Container(
            height: 150,
            width: 500,
            child: FittedBox(
              child: ElevatedButton(
                onPressed: () {
                  widget.onCandyGenerated();
                  updateCandy();
                },
                style: ButtonStyle(
                  backgroundColor: MaterialStateProperty.all<Color>(Colors.black),
                ),
                child: DragTarget<MyDraggableItem>(
                  builder: (context, candidateItems, rejectedItems) {
                    return Text(
                      candy, 
                      style: const TextStyle(color: Colors.amber, fontSize: 30.0)
                    );
                  },
                  onAccept: (item) {
                    updateCandy();
                  }
                ),
              ),
            ),
          ),
          ),
        ]
      ),
    );
  }
}
  
class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      home: MyHomePage(title: 'Candy Counter'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  final String title;

  const MyHomePage({
    Key? key,
    required this.title,
  }) : super(key: key);

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  int _counter = 0;

  void _incrementCounter(String candy) {
    setState(() {
      if (candy == 'üç¨') {
        _counter++;
      }
      else if (candy == 'üç´') {
        _counter += 5;
      }
      else if (candy == 'üë∫') {
        _counter = 0;
      }
      else if (candy == 'üëª') {
        if (_counter - 50 > 0) {
          _counter -= 50;
        } else {
          _counter = 0;
        }
      }
      else if (candy == 'üòà') {
        if (_counter - 100 > 0) {
          _counter -= 100;
        } else {
          _counter = 0;
        }
      }
      else if (candy == 'üëΩ') {
        _counter = 0;
      }
      else {
        _counter += 50;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xFF5d5c58),
      appBar: AppBar(
        backgroundColor: Colors.black,
        toolbarHeight: 80.0,
        title: Center(child: Text(widget.title, 
                    style: GoogleFonts.nosifer(
                      textStyle: const TextStyle(fontSize: 60.0, color: Color(0xFF1ce619)),
                      ),
                    ),
        ),
      ),
      body: Stack(
        children: [
          Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.start,
              children: [
                SizedBox(height: 20.0),
                Text(
                  'You have collected:',
                  style: GoogleFonts.creepster(
                    textStyle: const TextStyle(
                      color: Colors.red,
                      fontSize: 30.0,
                    ),
                  ),
                ),
                SizedBox(height: 10.0),
                Text(
                  '$_counter',
                  style: GoogleFonts.nosifer(
                    textStyle: const TextStyle(
                      color: Color(0xFF1ce619),
                      fontSize: 150.0,//Theme.of(context).textTheme.headlineMedium,
                    ),
                  ),
                ),
                SizedBox(height: 10.0),
                Text(
                  'pieces of candy!',
                  style: GoogleFonts.creepster(
                    textStyle: const TextStyle(
                      color: Colors.red,
                      fontSize: 30.0,
                    ),
                  ),
                ),
                SizedBox(height: 55.0),
                CandyButton(onCandyGenerated: () => _incrementCounter(candy)),
              ],
            ),
          ),
          Positioned(
            bottom: 60.0,
            right: 50.0,
            child: Container(
              decoration: const BoxDecoration(
                borderRadius: BorderRadius.all(Radius.circular(20.0)),
                color: Color(0xFFb00b40),
              ),
              child: Draggable<MyDraggableItem>( 
                data: MyDraggableItem("‚öîÔ∏è"),
                feedback: const Text(
                  "‚öîÔ∏è",
                  style: TextStyle(
                    fontSize: 120.0,
                    decoration: TextDecoration.none,
                    color: Color(0xFFc61ddc),
                  )
                ),
                child: const Text(
                  "‚öîÔ∏è",
                  style: TextStyle(
                    fontSize: 100.0,
                    decoration: TextDecoration.none,
                    color: Color(0xFFdcdcdb),
                  )
                ),
             ),
            ),
          ),
        ],
      ),
    );
  }
}